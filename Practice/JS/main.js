// main.js ‚Äî –Ω–∞–¥—ë–∂–Ω–∞—è –≤–µ—Ä—Å–∏—è (—Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –Ω–∞ index.html, –∏ –Ω–∞ settings.html)
document.addEventListener('DOMContentLoaded', () => {

  /* -------------------------
     0) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º—É –Ω–∞ –ª—é–±–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
     ------------------------- */
  const savedTheme = localStorage.getItem('theme') || 'light';
  document.body.setAttribute('data-theme', savedTheme);

  /* -------------------------
     1) –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã (–Ω–∞ settings.html)
     ------------------------- */
  const themeSelect = document.getElementById('theme');
  if (themeSelect) {
    themeSelect.value = savedTheme;
    themeSelect.addEventListener('change', () => {
      const selected = themeSelect.value;
      document.body.setAttribute('data-theme', selected);
      localStorage.setItem('theme', selected);
    });
  }

  /* -------------------------
     2) –ú–µ–Ω—é –º–æ–±–∏–ª—å–Ω–æ–µ (–µ—Å–ª–∏ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –≤ DOM)
     ------------------------- */
  const menuToggle = document.getElementById('menuToggle');
  const navContainer = document.getElementById('navContainer');
  if (menuToggle && navContainer) {
    menuToggle.addEventListener('click', () => {
      navContainer.classList.toggle('active');
    });

    // –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É (–µ—Å–ª–∏ –µ—Å—Ç—å nav-links)
    document.querySelectorAll('.nav-links a').forEach(link => {
      link.addEventListener('click', () => {
        navContainer.classList.remove('active');
      });
    });
  }

  /* -------------------------
     3) Profile info: —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –∏–º—è –∏ "About me"
     –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ settings.html (—Å input) –∏ –Ω–∞ index.html (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ)
     ------------------------- */
  const inputUsername = document.getElementById('username');
  const inputAbout = document.getElementById('about');
  const saveBtn = document.getElementById('saveProfile');

  // –ï—Å–ª–∏ –ø–æ–ª—è –≤–≤–æ–¥–∞ –µ—Å—Ç—å (settings.html) ‚Äî –ø–æ–¥—Å—Ç–∞–≤–∏–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  if (inputUsername) inputUsername.value = localStorage.getItem('username') || '';
  if (inputAbout) inputAbout.value = localStorage.getItem('about') || '';

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Save
  if (saveBtn) {
    saveBtn.addEventListener('click', () => {
      if (inputUsername) localStorage.setItem('username', inputUsername.value);
      if (inputAbout) localStorage.setItem('about', inputAbout.value);
      alert('Profile info saved!');
      // –û–±–Ω–æ–≤–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –µ—Å–ª–∏ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–∫–∞–∑–∞
      updateDisplayedProfile();
    });
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∏ "About me" –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (index.html)
  function updateDisplayedProfile() {
    const displayName = document.getElementById('displayName'); // <h2 id="displayName">
    const displayAbout = document.getElementById('displayAbout'); // <p id="displayAbout">
    const savedName = localStorage.getItem('username');
    const savedAbout = localStorage.getItem('about');

    if (displayName) displayName.textContent = savedName ? savedName : 'Leah';
    if (displayAbout) displayAbout.textContent = savedAbout ? savedAbout : "I'm learning front-end development. I love plants and beautiful aesthetics. üåø";
  }

  // –û–±–Ω–æ–≤–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (–µ—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å –º–µ—Å—Ç–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞)
  updateDisplayedProfile();

  /* -------------------------
     4) –°—Ç–∞—Ç—É—Å (Change status) ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
     ------------------------- */
  const statusEl = document.querySelector('.status');
  const changeStatusBtn = document.getElementById('change-status');
  const savedStatus = localStorage.getItem('userStatus');
  if (statusEl && savedStatus) {
    statusEl.textContent = `üí¨ ${savedStatus}`;
  }

  if (changeStatusBtn && statusEl) {
    changeStatusBtn.addEventListener('click', () => {
      const newStatus = prompt('Enter a new status:');
      if (newStatus !== null) {
        statusEl.textContent = `üí¨ ${newStatus}`;
        localStorage.setItem('userStatus', newStatus);
      }
    });
  }

  /* -------------------------
     5) –ü–æ—Å—Ç—ã + —Ñ–æ—Ç–æ (–ª–æ–∫–∞–ª—å–Ω–æ)
     - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –ø–æ—Å—Ç–æ–≤ –≤ localStorage (postsKey)
     - –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (index.html)
     - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –ª–∞–π–∫–∏ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–∞–π–∫–æ–≤)
     ------------------------- */
  const POSTS_KEY = 'myProfilePostsV1';
  const postsSection = document.querySelector('.posts'); // –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–µ–∫—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤
  if (postsSection) {

    // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø–æ—Å—Ç–æ–≤, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    let postsList = postsSection.querySelector('.posts-list');
    if (!postsList) {
      postsList = document.createElement('div');
      postsList.className = 'posts-list';
      // –≤—Å—Ç–∞–≤–∏–º –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ posts-header
      const header = postsSection.querySelector('.posts-header');
      if (header && header.nextSibling) header.parentNode.insertBefore(postsList, header.nextSibling);
      else postsSection.appendChild(postsList);
    }

    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å—Ç—ã –∏–∑ localStorage
    function loadPosts() {
      const raw = localStorage.getItem(POSTS_KEY);
      return raw ? JSON.parse(raw) : [];
    }

    function savePosts(posts) {
      localStorage.setItem(POSTS_KEY, JSON.stringify(posts));
    }

    // –†–µ–Ω–¥–µ—Ä–∏–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
    function renderPosts() {
      const posts = loadPosts();
      postsList.innerHTML = '';
      if (posts.length === 0) {
        postsList.innerHTML = '<p style="color:#666">There are no posts yet - be the first!</p>';
        return;
      }
      // –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –ø–æ –ø–æ—Ä—è–¥–∫—É ‚Äî newest first
      for (let i = posts.length - 1; i >= 0; i--) {
        const p = posts[i];
        const postEl = document.createElement('div');
        postEl.className = 'post';
        postEl.dataset.index = i; // –∏–Ω–¥–µ–∫—Å –≤ –º–∞—Å—Å–∏–≤–µ
        // –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–¥–∞–Ω–Ω—ã–µ –≤ base64) ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
        const imgHtml = p.image ? `<div class="post-img-wrap"><img src="${p.image}" alt="photo" style="max-width:100%; border-radius:8px; margin-top:10px;"></div>` : '';
        postEl.innerHTML = `
          <p>${escapeHtml(p.text)}</p>
          ${imgHtml}
          <button class="like-btn">‚ô•Ô∏è ${p.likes}</button>
        `;
        postsList.appendChild(postEl);
      }
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML
    function escapeHtml(str) {
      return String(str)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;');
    }

    // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞ (–º–æ–∂–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å)
    const addPostBtn = document.getElementById('add-post-btn');
    if (addPostBtn) {
      addPostBtn.addEventListener('click', () => {
        // –ø—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º–∞: —Å–Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç, –∑–∞—Ç–µ–º –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        const text = prompt('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞:');
        if (text === null) return;
        // —Å–ø—Ä–æ—Å–∏–º, —Ö–æ—Ç–∏–º –ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ
        const wantPhoto = confirm('Add a photo to the post? (OK - yes, Cancel - no)');
        if (wantPhoto) {
          // —Å–æ–∑–¥–∞—ë–º input file –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
          const fileInput = document.createElement('input');
          fileInput.type = 'file';
          fileInput.accept = 'image/*';
          fileInput.onchange = () => {
            const file = fileInput.files[0];
            if (!file) {
              createAndSavePost(text, null);
              return;
            }
            const reader = new FileReader();
            reader.onload = function (e) {
              const base64 = e.target.result;
              createAndSavePost(text, base64);
            };
            reader.readAsDataURL(file);
          };
          // –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –æ—Ç–∫—Ä–æ–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
          fileInput.click();
        } else {
          createAndSavePost(text, null);
        }
      });
    }

    function createAndSavePost(text, base64image) {
      const posts = loadPosts();
      posts.push({ text: text.trim(), image: base64image, likes: 0, created: Date.now() });
      savePosts(posts);
      renderPosts();
    }

    // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞: –ª–∞–π–∫–∏
    postsList.addEventListener('click', (e) => {
      if (!e.target.classList.contains('like-btn')) return;
      const postEl = e.target.closest('.post');
      const index = parseInt(postEl.dataset.index, 10);
      const posts = loadPosts();
      // –∏–Ω–¥–µ–∫—Å –≤ –º–∞—Å—Å–∏–≤–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç i (–º—ã —Ä–µ–Ω–¥–µ—Ä–∏–º newest first),
      // –ø–æ—ç—Ç–æ–º—É —Ä–µ–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å ‚Äî index
      posts[index].likes += 1;
      savePosts(posts);
      renderPosts();
    });

    // –†–µ–Ω–¥–µ—Ä–∏–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    renderPosts();
  }

});
